'use strict';
var Hapi=require('@hapi/hapi');
var mysql=require('mysql');

var server=new Hapi.Server({
    host:'localhost',
    port:3000
});
server.route({
    method:"GET",
    path:"/",
    handler:(request,reply)=>{
        return "Welcome to HAPI Server";
    }
})
server.route({
    method:"GET",
    path:"/books",
    handler:(request,reply)=>{
        return new Promise((resolve,reject)=>{
            var connection = mysql.createConnection({
                host     : 'localhost',
                user     :'root',
                password : '',
                database : 'table'
              });
              connection.connect();
     
              connection.query(`SELECT * from books`, function (error, books, fields) {
                if (error) reject(error);
                resolve(books);
              });
               
              connection.end();
        })
        
    }
})
server.route({
    method:"POST",
    path:"/books",
    handler:(request,reply)=>{
        var newbook= request.payload;
        return new Promise((resolve,reject)=>{
            var connection = mysql.createConnection({
                host     : 'localhost',
                user     :'root',
                password : '',
                database : 'table'
              });
              connection.connect();
     
              connection.query(`INSERT INTO books(book_id,author_fname) VALUES('${newbook.book_id}','${newbook.author_fname}')`, function (error, books, fields) {
                if (error) reject(error);
                resolve(books);
              });
               
              connection.end();
        })
        
    }
})
server.route({
    method:"PUT",
    path:"/books/{id}",
    handler:(request,reply)=>{
        var id=request.params.id;
        var updatebook=request.payload;
        return new Promise((resolve,reject)=>{
            var connection = mysql.createConnection({
                host     : 'localhost',
                user     :'root',
                password : '',
                database : 'table'
              });
              connection.connect();
     
              connection.query(`UPDATE books SET author_fname='${updatebook.author_fname}'WHERE book_id=${id}`, function (error, books, fields) {
                if (error) reject(error);
                resolve(books);
              });
               
              connection.end();
        })
        
    }
})
server.route({
    method:"DELETE",
    path:"/books/{id}",
    handler:(request,reply)=>{
        var id=request.params.id;
        return new Promise((resolve,reject)=>{
            var connection = mysql.createConnection({
                host     : 'localhost',
                user     :'root',
                password : '',
                database : 'table'
              });
              connection.connect();
              connection.query(`DELETE from books WHERE book_id=${id}`, function (error, books, fields) {
                if (error) reject(error);
                resolve(books);
              });
              connection.end();
        })
        
    }
})

server.start((err)=>{
    if(err) throw err;
    console.log("Server is started")
});